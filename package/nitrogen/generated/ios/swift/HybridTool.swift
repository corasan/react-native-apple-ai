///
/// HybridTool.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

import NitroModules

/**
 * Represents an instance of `HybridTool`, backed by a C++ struct.
 */
public typealias HybridTool = margelo.nitro.rnappleai.HybridTool

public extension HybridTool {
  private typealias bridge = margelo.nitro.rnappleai.bridge.swift

  /**
   * Create a new instance of `HybridTool`.
   */
  init(name: String, description: String, arguments: AnyMapHolder) {
    self.init(std.string(name), std.string(description), arguments.cppPart)
  }

  var name: String {
    @inline(__always)
    get {
      return String(self.__name)
    }
    @inline(__always)
    set {
      self.__name = std.string(newValue)
    }
  }
  
  var description: String {
    @inline(__always)
    get {
      return String(self.__description)
    }
    @inline(__always)
    set {
      self.__description = std.string(newValue)
    }
  }
  
  var arguments: AnyMapHolder {
    @inline(__always)
    get {
      return AnyMapHolder(withCppPart: self.__arguments)
    }
    @inline(__always)
    set {
      self.__arguments = newValue.cppPart
    }
  }
}
