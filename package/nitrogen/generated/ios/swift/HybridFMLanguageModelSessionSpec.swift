///
/// HybridFMLanguageModelSessionSpec.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

import Foundation
import NitroModules

/// See ``HybridFMLanguageModelSessionSpec``
public protocol HybridFMLanguageModelSessionSpec_protocol: HybridObject {
  // Properties
  

  // Methods
  func streamResponse(prompt: String, onStream: @escaping (_ stream: String) -> Void) throws -> Promise<String>
}

/// See ``HybridFMLanguageModelSessionSpec``
public class HybridFMLanguageModelSessionSpec_base {
  private weak var cxxWrapper: HybridFMLanguageModelSessionSpec_cxx? = nil
  public func getCxxWrapper() -> HybridFMLanguageModelSessionSpec_cxx {
  #if DEBUG
    guard self is HybridFMLanguageModelSessionSpec else {
      fatalError("`self` is not a `HybridFMLanguageModelSessionSpec`! Did you accidentally inherit from `HybridFMLanguageModelSessionSpec_base` instead of `HybridFMLanguageModelSessionSpec`?")
    }
  #endif
    if let cxxWrapper = self.cxxWrapper {
      return cxxWrapper
    } else {
      let cxxWrapper = HybridFMLanguageModelSessionSpec_cxx(self as! HybridFMLanguageModelSessionSpec)
      self.cxxWrapper = cxxWrapper
      return cxxWrapper
    }
  }
}

/**
 * A Swift base-protocol representing the FMLanguageModelSession HybridObject.
 * Implement this protocol to create Swift-based instances of FMLanguageModelSession.
 * ```swift
 * class HybridFMLanguageModelSession : HybridFMLanguageModelSessionSpec {
 *   // ...
 * }
 * ```
 */
public typealias HybridFMLanguageModelSessionSpec = HybridFMLanguageModelSessionSpec_protocol & HybridFMLanguageModelSessionSpec_base
