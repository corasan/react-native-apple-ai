///
/// RNAppleAI-Swift-Cxx-Umbrella.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

// Forward declarations of C++ defined types
// Forward declaration of `AnyMap` to properly resolve imports.
namespace NitroModules { class AnyMap; }
// Forward declaration of `HybridFoundationModelsSpec` to properly resolve imports.
namespace margelo::nitro::rnappleai { class HybridFoundationModelsSpec; }
// Forward declaration of `HybridToolBridgeSpec` to properly resolve imports.
namespace margelo::nitro::rnappleai { class HybridToolBridgeSpec; }
// Forward declaration of `HybridToolFactorySpec` to properly resolve imports.
namespace margelo::nitro::rnappleai { class HybridToolFactorySpec; }
// Forward declaration of `HybridToolSpec` to properly resolve imports.
namespace margelo::nitro::rnappleai { class HybridToolSpec; }
// Forward declaration of `ToolConfig` to properly resolve imports.
namespace margelo::nitro::rnappleai { struct ToolConfig; }

// Include C++ defined types
#include "HybridFoundationModelsSpec.hpp"
#include "HybridToolBridgeSpec.hpp"
#include "HybridToolFactorySpec.hpp"
#include "HybridToolSpec.hpp"
#include "ToolConfig.hpp"
#include <NitroModules/AnyMap.hpp>
#include <NitroModules/Promise.hpp>
#include <NitroModules/Result.hpp>
#include <exception>
#include <functional>
#include <memory>
#include <optional>
#include <string>

// C++ helpers for Swift
#include "RNAppleAI-Swift-Cxx-Bridge.hpp"

// Common C++ types used in Swift
#include <NitroModules/ArrayBufferHolder.hpp>
#include <NitroModules/AnyMapHolder.hpp>
#include <NitroModules/RuntimeError.hpp>
#include <NitroModules/DateToChronoDate.hpp>

// Forward declarations of Swift defined types
// Forward declaration of `HybridFoundationModelsSpec_cxx` to properly resolve imports.
namespace RNAppleAI { class HybridFoundationModelsSpec_cxx; }
// Forward declaration of `HybridToolBridgeSpec_cxx` to properly resolve imports.
namespace RNAppleAI { class HybridToolBridgeSpec_cxx; }
// Forward declaration of `HybridToolFactorySpec_cxx` to properly resolve imports.
namespace RNAppleAI { class HybridToolFactorySpec_cxx; }
// Forward declaration of `HybridToolSpec_cxx` to properly resolve imports.
namespace RNAppleAI { class HybridToolSpec_cxx; }

// Include Swift defined types
#if __has_include("RNAppleAI-Swift.h")
// This header is generated by Xcode/Swift on every app build.
// If it cannot be found, make sure the Swift module's name (= podspec name) is actually "RNAppleAI".
#include "RNAppleAI-Swift.h"
// Same as above, but used when building with frameworks (`use_frameworks`)
#elif __has_include(<RNAppleAI/RNAppleAI-Swift.h>)
#include <RNAppleAI/RNAppleAI-Swift.h>
#else
#error RNAppleAI's autogenerated Swift header cannot be found! Make sure the Swift module's name (= podspec name) is actually "RNAppleAI", and try building the app first.
#endif
