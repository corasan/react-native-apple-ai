///
/// HybridLanguageModelSessionFactorySpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#include "HybridLanguageModelSessionFactorySpec.hpp"

namespace margelo::nitro::rnappleai {

  void HybridLanguageModelSessionFactorySpec::loadHybridMethods() {
    // load base methods/properties
    HybridObject::loadHybridMethods();
    // load custom methods/properties
    registerHybrids(this, [](Prototype& prototype) {
      prototype.registerHybridGetter("isAvailable", &HybridLanguageModelSessionFactorySpec::getIsAvailable);
      prototype.registerHybridGetter("availabilityStatus", &HybridLanguageModelSessionFactorySpec::getAvailabilityStatus);
      prototype.registerHybridMethod("create", &HybridLanguageModelSessionFactorySpec::create);
    });
  }

} // namespace margelo::nitro::rnappleai
