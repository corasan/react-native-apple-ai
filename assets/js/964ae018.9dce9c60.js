"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[443],{3588:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>t});const i=JSON.parse('{"id":"api-reference","title":"API Reference","description":"LanguageModelSession","source":"@site/docs/api-reference.md","sourceDirName":".","slug":"/api-reference","permalink":"/react-native-apple-ai/docs/api-reference","draft":false,"unlisted":false,"editUrl":"https://github.com/corasan/react-native-apple-ai/tree/main/docs/docs/api-reference.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Core Concepts","permalink":"/react-native-apple-ai/docs/core-concepts"},"next":{"title":"Examples","permalink":"/react-native-apple-ai/docs/examples"}}');var r=s(4848),o=s(8453);const l={sidebar_position:3},c="API Reference",a={},t=[{value:"LanguageModelSession",id:"languagemodelsession",level:2},{value:"Constructor",id:"constructor",level:3},{value:"Instance Methods",id:"instance-methods",level:3},{value:"<code>streamResponse(prompt, callback)</code>",id:"streamresponseprompt-callback",level:4},{value:"Functions",id:"functions",level:2},{value:"<code>checkFoundationModelsAvailability()</code>",id:"checkfoundationmodelsavailability",level:3},{value:"Hooks",id:"hooks",level:2},{value:"<code>useLanguageModel(config?)</code>",id:"uselanguagemodelconfig",level:3},{value:"<code>useStreamingResponse(session)</code>",id:"usestreamingresponsesession",level:3},{value:"Types",id:"types",level:2},{value:"<code>FoundationModelsAvailability</code>",id:"foundationmodelsavailability",level:3},{value:"<code>AvailabilityStatus</code>",id:"availabilitystatus",level:3},{value:"<code>LanguageModelSessionConfig</code>",id:"languagemodelsessionconfig",level:3},{value:"<code>ToolDefinition</code>",id:"tooldefinition",level:3},{value:"<code>AppleAIError</code>",id:"appleaierror",level:3},{value:"Error Codes",id:"error-codes",level:4},{value:"<code>StreamingOptions</code>",id:"streamingoptions",level:3},{value:"Utilities",id:"utilities",level:2},{value:"<code>createTool(definition)</code>",id:"createtooldefinition",level:3},{value:"<code>isAppleAIError(error)</code>",id:"isappleaierrorerror",level:3},{value:"<code>parseNativeError(error)</code>",id:"parsenativeerrorerror",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"api-reference",children:"API Reference"})}),"\n",(0,r.jsx)(n.h2,{id:"languagemodelsession",children:"LanguageModelSession"}),"\n",(0,r.jsx)(n.h3,{id:"constructor",children:"Constructor"}),"\n",(0,r.jsx)(n.p,{children:"Creates a new LanguageModelSession instance. Throws an error if Apple Intelligence is not available."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"constructor(config?: LanguageModelSessionConfig)\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"config.instructions?: string"})," - System instructions defining AI behavior"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"config.tools?: ToolDefinition[]"})," - Array of tools the AI can invoke"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"instance-methods",children:"Instance Methods"}),"\n",(0,r.jsx)(n.h4,{id:"streamresponseprompt-callback",children:(0,r.jsx)(n.code,{children:"streamResponse(prompt, callback)"})}),"\n",(0,r.jsx)(n.p,{children:"Initiates a streaming response from the language model."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"streamResponse(prompt: string, callback: (fullResponse: string) => void): void\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"prompt: string"})," - The user's message"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"callback: (fullResponse: string) => void"})," - Called with the complete response so far"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"functions",children:"Functions"}),"\n",(0,r.jsx)(n.h3,{id:"checkfoundationmodelsavailability",children:(0,r.jsx)(n.code,{children:"checkFoundationModelsAvailability()"})}),"\n",(0,r.jsx)(n.p,{children:"Check if Apple Intelligence is available on the device."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"function checkFoundationModelsAvailability(): FoundationModelsAvailability\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),": Availability status object with ",(0,r.jsx)(n.code,{children:"isAvailable"}),", ",(0,r.jsx)(n.code,{children:"status"}),", and ",(0,r.jsx)(n.code,{children:"message"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"hooks",children:"Hooks"}),"\n",(0,r.jsx)(n.h3,{id:"uselanguagemodelconfig",children:(0,r.jsx)(n.code,{children:"useLanguageModel(config?)"})}),"\n",(0,r.jsx)(n.p,{children:"React hook for managing language model sessions with automatic lifecycle management."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"function useLanguageModel(config?: UseLanguageModelConfig): UseLanguageModelReturn\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"config.instructions?: string"})," - System instructions for the AI"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"config.tools?: ToolDefinition[]"})," - Tools the AI can use"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"config.onResponse?: (response: string) => void"})," - Callback for responses"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"config.onError?: (error: AppleAIError) => void"})," - Callback for errors"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"session: LanguageModelSession | null"})," - Current session instance"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"response: string"})," - Latest response from the AI"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"loading: boolean"})," - Whether a request is in progress"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"error: AppleAIError | null"})," - Last error that occurred"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"send: (prompt: string) => Promise<string>"})," - Function to send messages"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"reset: () => void"})," - Reset response and error state"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"isSessionReady: boolean"})," - Whether session is initialized and ready"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"usestreamingresponsesession",children:(0,r.jsx)(n.code,{children:"useStreamingResponse(session)"})}),"\n",(0,r.jsx)(n.p,{children:"Lower-level hook for streaming AI responses with more control."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"function useStreamingResponse(session: LanguageModelSession): UseStreamingResponseReturn\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"session: LanguageModelSession"})," - The session to use for streaming"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"response: string"})," - Current response text"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"isStreaming: boolean"})," - Whether currently streaming"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"isComplete: boolean"})," - Whether streaming is complete"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"error: AppleAIError | null"})," - Last error that occurred"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"streamResponse: (prompt: string, options?: StreamingOptions) => Promise<string>"})," - Start streaming"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"cancel: () => void"})," - Cancel current stream"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"reset: () => void"})," - Reset state"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"types",children:"Types"}),"\n",(0,r.jsx)(n.h3,{id:"foundationmodelsavailability",children:(0,r.jsx)(n.code,{children:"FoundationModelsAvailability"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"interface FoundationModelsAvailability {\n  isAvailable: boolean;\n  status: AvailabilityStatus;\n  message: string;\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"availabilitystatus",children:(0,r.jsx)(n.code,{children:"AvailabilityStatus"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"type AvailabilityStatus =\n  | 'available'\n  | 'unavailable.platformNotSupported'\n  | 'unavailable.deviceNotEligible'\n  | 'unavailable.appleIntelligenceNotEnabled'\n  | 'unavailable.modelNotReady'\n  | 'unavailable.unknown'\n"})}),"\n",(0,r.jsx)(n.h3,{id:"languagemodelsessionconfig",children:(0,r.jsx)(n.code,{children:"LanguageModelSessionConfig"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"interface LanguageModelSessionConfig {\n  instructions?: string;\n  tools?: ToolDefinition[];\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"tooldefinition",children:(0,r.jsx)(n.code,{children:"ToolDefinition"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"interface ToolDefinition {\n  name: string;\n  description: string;\n  arguments: AnyMap;\n  handler: (args: AnyMap) => Promise<AnyMap>;\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"appleaierror",children:(0,r.jsx)(n.code,{children:"AppleAIError"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"class AppleAIError extends Error {\n  readonly code: string;\n  readonly details?: Record<string, any>;\n\n  constructor(code: string, message: string, details?: Record<string, any>);\n  static fromErrorInfo(errorInfo: AppleAIErrorInfo): AppleAIError;\n  toErrorInfo(): AppleAIErrorInfo;\n}\n"})}),"\n",(0,r.jsx)(n.h4,{id:"error-codes",children:"Error Codes"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"SESSION_NOT_INITIALIZED"})," - Session is not ready"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"TOOL_CALL_ERROR"})," - Tool call failed"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"TOOL_EXECUTION_ERROR"})," - Tool execution failed"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"SCHEMA_CREATION_ERROR"})," - Failed to create tool schema"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ARGUMENT_PARSING_ERROR"})," - Failed to parse tool arguments"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"RESPONSE_PARSING_ERROR"})," - Failed to parse tool response"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"UNKNOWN_TOOL_ERROR"})," - Unknown tool referenced"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"SESSION_STREAMING_ERROR"})," - Streaming failed"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"UNSUPPORTED_PLATFORM"})," - Platform not supported"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"streamingoptions",children:(0,r.jsx)(n.code,{children:"StreamingOptions"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"interface StreamingOptions {\n  onToken?: (token: string) => void;\n  onComplete?: (fullResponse: string) => void;\n  onError?: (error: AppleAIError) => void;\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"utilities",children:"Utilities"}),"\n",(0,r.jsx)(n.h3,{id:"createtooldefinition",children:(0,r.jsx)(n.code,{children:"createTool(definition)"})}),"\n",(0,r.jsx)(n.p,{children:"Helper function to create type-safe tools with Zod schema validation."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"function createTool<T extends ZodObjectSchema>(definition: {\n  name: string;\n  description: string;\n  arguments: T;\n  handler: (params: z.infer<T>) => Promise<AnyMap>;\n}): ToolDefinition\n"})}),"\n",(0,r.jsx)(n.h3,{id:"isappleaierrorerror",children:(0,r.jsx)(n.code,{children:"isAppleAIError(error)"})}),"\n",(0,r.jsx)(n.p,{children:"Type guard to check if an error is an AppleAIError."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"function isAppleAIError(error: any): error is AppleAIError\n"})}),"\n",(0,r.jsx)(n.h3,{id:"parsenativeerrorerror",children:(0,r.jsx)(n.code,{children:"parseNativeError(error)"})}),"\n",(0,r.jsx)(n.p,{children:"Parse native errors into AppleAIError instances."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"function parseNativeError(error: any): AppleAIError\n"})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>c});var i=s(6540);const r={},o=i.createContext(r);function l(e){const n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);